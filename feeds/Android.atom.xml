<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>draftcode.github.io</title><link href="http://draftcode.github.io/" rel="alternate"></link><link href="http://draftcode.github.io//feeds/Android.atom.xml" rel="self"></link><id>http://draftcode.github.io/</id><updated>2012-09-23T23:58:12+09:00</updated><entry><title>RoboGuiceのInjectExtraを使うとテストがしにくくなる件について</title><link href="http://draftcode.github.io/2012/09/23/25036f39-d55f-45b2-97ca-19460353c847.html" rel="alternate"></link><updated>2012-09-23T23:58:12+09:00</updated><author><name>draftcode</name></author><id>tag:draftcode.github.io,2012-09-23:2012/09/23/25036f39-d55f-45b2-97ca-19460353c847.html</id><summary type="html">&lt;p&gt;RoboGuiceのInjectなんとか系は記述量が減ってテストもしやすくなって便利ですが、残念ながらInjectExtraだけはイマイチと言わざるを得ません。使っているバーションは、RoboGuice 1.1.2とGuice 2.0 no-aopで、Robolectricでテストを書いたりしています。もしかしたら、RoboGuice 2.0で解消されているのかも知れません。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;問題背景&lt;/h2&gt;
&lt;p&gt;まず、実機で動くコードでは、&lt;tt class="docutils literal"&gt;RoboActivity.onCreate()&lt;/tt&gt;の中でInjectionが行われます。このとき、&lt;tt class="docutils literal"&gt;InjectView&lt;/tt&gt;以外のフィールドがInjectされます。その中には当然&lt;tt class="docutils literal"&gt;InjectExtra&lt;/tt&gt;も入っていますので、ここでそのInjectionのContextである
ActivityからIntentがとり出されて、Extraが入ります:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;SOME_EXTRA_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SOME_EXTRA_ID&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;@InjectExtra&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SOME_EXTRA_ID&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;someExtra&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;次に、テストコードの中で、クラス中にテスト対象のActivityをInjectしているとします。このとき、Activityに&lt;tt class="docutils literal"&gt;InjectExtra&lt;/tt&gt;が入っているとInjectionに失敗してしまいます。失敗する理由としては、次の2つが挙げられます。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Injectionを行うActivityにIntentがセットされていないこと。&lt;/li&gt;
&lt;li&gt;Injectionを行うScopeが&lt;tt class="docutils literal"&gt;ContextScope&lt;/tt&gt;ではないこと。特に、Activityの&lt;tt class="docutils literal"&gt;ContextScope&lt;/tt&gt;ではないこと。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解決策&lt;/h2&gt;
&lt;p&gt;この2つを回避するために、それなりに現実的な方法で対処をしてみようと試みましたが、根本的に実際に実機で動くときのコードとテスト中のコードでInjectionタイミングが違うことが問題なので、上手く行きませんでした。Activityはどこかほかのオブジェクトの中でInjectされることを、あまり想定していないのです。&lt;/p&gt;
&lt;p&gt;大掛かりな解決策としては、&lt;tt class="docutils literal"&gt;ExtrasListener&lt;/tt&gt;と&lt;tt class="docutils literal"&gt;ContextScope&lt;/tt&gt;を変更して、&lt;tt class="docutils literal"&gt;InjectExtra&lt;/tt&gt;が処理されるタイミングを変更するというものがありますが、そこまでして&lt;tt class="docutils literal"&gt;InjectExtra&lt;/tt&gt;を使いたくありません。&lt;/p&gt;
&lt;p&gt;大掛かりな解決策を取らずに&lt;tt class="docutils literal"&gt;InjectExtra&lt;/tt&gt;を利用したActivityに対してテストを書くのであれば、ActivityはテストコードでのInjecされないようにして、&lt;tt class="docutils literal"&gt;setUp&lt;/tt&gt;の中で手動Injectするしかありません。その手動Injectを行う場合には、自分でそのActivityの&lt;tt class="docutils literal"&gt;ContextScope&lt;/tt&gt;を生成して、その中で&lt;tt class="docutils literal"&gt;injectMembers&lt;/tt&gt;を行う必要があります。この方法を取ると、一見、テストコード中の&lt;tt class="docutils literal"&gt;InjectView&lt;/tt&gt;が効かなくなりそうですが、どうやら&lt;tt class="docutils literal"&gt;ContextScope&lt;/tt&gt;のスタックがきちんとしているのか、そのActivityが&lt;tt class="docutils literal"&gt;setContentView&lt;/tt&gt;をしたときに、きちんとInjectionされます:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;TEST_EXTRA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Inject&lt;/span&gt;
&lt;span class="n"&gt;Injector&lt;/span&gt; &lt;span class="n"&gt;injector&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;@InjectView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;myButton&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Button&lt;/span&gt; &lt;span class="n"&gt;myButton&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;MyActivity&lt;/span&gt; &lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Before&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;activity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyActivity&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Intent&lt;/span&gt; &lt;span class="n"&gt;intent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Intent&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;putExtra&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyActivity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SOME_EXTRA_ID&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEST_EXTRA&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setIntent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;ContextScope&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;injector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInstance&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ContextScope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;enter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;injector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;injectMembers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ContextScope&lt;/tt&gt;周りは、RoboGuice 2.0では多少改善されているのは確認できました。&lt;tt class="docutils literal"&gt;RoboGuice.injectMembers(Context, T)&lt;/tt&gt;というメソッドが存在するのが確認できました。&lt;/p&gt;
&lt;p&gt;もうひとつの解決策は、もう&lt;tt class="docutils literal"&gt;InjectExtra&lt;/tt&gt;を使わないという方法で、自分はもうこっちの方法でいいかなと思っています。&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>