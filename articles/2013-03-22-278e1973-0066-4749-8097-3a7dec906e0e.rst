===================
PythonのC拡張を書く
===================
:Author: draftcode
:Date:   2013-03-22 14:42:41
:Slug:   278e1973-0066-4749-8097-3a7dec906e0e
:Category: Python

最近はPythonのC拡張を書いていたりするので、覚えている範囲でハマった点を説明し
ます。C拡張を書き始めるには、基本的に `Python インタプリタの拡張と埋め込み`_
をみて、あとは見よう見まねで書きながら `Python/C API リファレンスマニュアル`_
を見とけばOKです。

.. _`Python インタプリタの拡張と埋め込み`: http://docs.python.jp/2/extending/index.html
.. _`Python/C API リファレンスマニュアル`: http://docs.python.jp/2/c-api/index.html

やると良いこと・ハマったこと
============================

引数はDECREFしてはいけない
--------------------------

Pythonのドキュメントをよく読んでないのも悪いのですが、どうやらPythonからCで書
かれた関数を呼びだされたときに渡ってくる引数はDECREFしてはいけないようです。
Python組み込みのAPI用意している分にはドキュメントにNew Referenceとか書いてある
のでそれをみて判断すればいいです。

DECREFの引数は2回以上評価される可能性のあるマクロなので変数のみ渡す
-------------------------------------------------------------------

同じくDECREF周りですが、Py_DECREFとかはマクロなので引数が複数回評価される可能
性があります。というかされます。なので
``Py_DECREF(PyObject_CallFunction(...))`` みたいなことをすると死にます。

cpythonのソースコードは手元に持っておく
---------------------------------------

正直ドキュメントを参照するよりかはソースコード直接読んだほうが早かったりするの
で、cpythonのソースコードは手元においておきましょう。というかPythonのスクリプ
トを書いててもドキュメントに書いてない感じのこととか、曖昧な感じがする点があっ
たりして、そういうときにソースコード手元に持っておくとすぐ確認できて便利です。

デバッグ版Pythonを使う
----------------------

多分これは自分が高速化のために文字列の可変長配列を自分で持っていたりとか、そう
いうことをしているからだと思いますが、メモリ周りのエラーで苦しみました。ひたす
らSegmentation Faultします。デバッグ版のPythonを使うとメモリまわりでチェックが
走るのである程度メモリエラーを検出できます。Pythonは自前でメモリ割り当てを行
なっている関係なのか、Valgrindとかを使ってもあんまりInvalid writeみたいなのは
検出できなかったです。(Valgrindの仕組みとかよくわかってない)

デバッグ版Pythonのビルドの仕方は `Python Developer's Guide`_ に書いてあるので
これを見て ``--with-pydebug`` をつければOKです。自分は pyenv_ を使っているの
で、そのプラグインの python-build を改造してデバッグ版ビルドができるようにしま
した。そのうち整理してPull-Request投げてみるかも。

.. _`Python Developer's Guide`: http://docs.python.org/devguide/
.. _pyenv: https://github.com/yyuu/pyenv

yepをつかってプロファイリング
-----------------------------

yep_ はバックエンドで gperftools_ を使ってプロファイリングをしてくれるモジュー
ルです。普通にPython付属のプロファイラだとPythonのコードしかプロファイリングで
きないので、このモジュールを使ってどこが遅くなっているのかを調べます。

.. _yep: https://pypi.python.org/pypi/yep
.. _gperftools: https://code.google.com/p/gperftools/

よくわかってないこと
====================

GC周り
------

どうやらオブジェクト内に外のオブジェクトを含み場合は、普通はGCを有効にしなけれ
ばいけない感じのようなのですが、別に自分が書いているクラスはユニコード文字列と
ファイルライクオブジェクトなので、GC周りのフラグを立てていません。GC-awareな書
き方は、多分ドキュメント見ればわかるんだろうと思いつつ、よくわかってません。

