======================================
Windows環境でPythonのC拡張をビルドする
======================================
:Author: draftcode
:Date:   2013-03-17 13:41:45
:Slug:   5f45fabb-8b64-469e-a0f6-7f9d76564af8
:Category: Python

Windows NativeのPythonでC拡張をビルドする方法を説明します。みなさん普通は
WindowsではPythonなんて使わないのか、あんまり情報が無いんですよね……

Windows SDKをインストールする
=============================

C拡張なのでCコンパイラが必要なので、コンパイラをインストールします。Microsoft
はVistual Studioを売っているのでそれを買えばコンパイラがついてきます。また、無
償版のExpress Editionをインストールしてもコンパイラがついてきます。

C拡張をうまいことビルドするために、distutilsはVS2008のコンパイラに対応するよう
に書かれています。UNIXだと適当にPATHからコンパイラを探してくれば良いのに、なぜ
WindowsだとdistutilsがVS2008のための特別な処理を入れているかというと、コンパイ
ラの場所がWindowsだとPATHに入っていなかったりして、レジストリから推測しなけれ
ばならないからです。残念OSですね……

レジストリからコンパイラの場所を推測する関係で、より新しいバージョンのVSには対
応できていません(レジストリエントリの場所が違うので)。そして、最近対応している
VS2008の(一部のVC++ 2008の)Express Editionのダウンロードができなくなったようで
す。(`[Python-Dev] VC++ 2008 Express Edition now locked away?`_)コンパイラが入
手できないのではdistutilsが対応するまでWindows上ではC拡張をビルドすることがで
きません。

.. _`[Python-Dev] VC++ 2008 Express Edition now locked away?`:
   http://mail.python.org/pipermail/python-dev/2013-March/124624.html

案ずることはありません。まだ道はあります。我々が欲しいのはコンパイラのみです。
MicrosoftはIDEがついてこないコンパイラ単体も配布しています。それがWindows SDK
です。ちょっと前までPlatform SDKという名前だった気がします。VS2008のバージョン
と互換性があるのは
`Microsoft Windows SDK for Windows 7 and .NET Framework 3.5 SP1`_ という
Windows SDKでこちらはまだダウンロード可能です。こちらをインストールしましょ
う。

.. _`Microsoft Windows SDK for Windows 7 and .NET Framework 3.5 SP1`:
   http://www.microsoft.com/en-us/download/details.aspx?id=3138

vcvarsall.batをつくる
=====================

この状態でpython setup.py buildをやるとvcvarsall.batがないという趣旨のことを言
われてビルドできません。このvcvarsall.batはVS2010と互換性のあるバージョンの
Windows SDKだとついてきているのですが、2008と互換性のあるバージョンのSDKだとつ
いてこないようです。中身は単純で現在のシステムが64bitか32bitかによって(これは
引数でも指定できるようです)使うコンパイラを選択するという単純なバッチファイル
です。コンパイラの選択もほかのバッチファイルを呼んでいるだけですので、自作しま
しょう。

``C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\vcvarsall.bat`` を作成
します。32bit版Pythonを利用している場合は、::

    @call "%~dp0bin\vcvars32.bat"

という行を、64bit版の場合は::

    @call "%~dp0bin\vcvars64.bat"

という行を一行書いて保存します。64bit版Windowsではない場合は適宜Program Files
を読み替えてください。

これでC拡張をコンパイルできるようになります。

より新しいバージョンを利用する方法
==================================

より新しいバージョンのコンパイラを利用する方法もあります。残念ながらdistutils
は(Python本体がコンパイルされたバージョンである)MSVC2008のコンパイラしか認識し
てくれないので、その部分をスキップしてPATHから探すようにします。

環境変数に ``MSSdk`` と ``DISTUTILS_USE_SDK`` という変数を追加して下さい。値は
なんでも構いません。これによりdistutilsはパスが通っているところからcl.exeや
link.exeを探します。

この方法の注意点は、Cygwin上でWindowsネイティブのPythonを利用してC拡張のコンパ
イルをしようとすると、CygwinのGCCのlink.exeが利用されてしまうことと、Python本
体と依存するライブラリが変わることです。後者によりpy2exeなどでexeにして配布す
るときに、実行環境で再頒布可能パッケージがなくて実行できない可能性があります。
(再頒布可能パッケージをインストールすれば実行可能です)
